!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR.host	build/Makefile	/^AR.host ?= ar$/;"	m
AR.target	build/Makefile	/^AR.target ?= $(AR)$/;"	m
ArgumentType	node-syslog.h	/^typedef v8::Arguments ArgumentType;$/;"	t
ArgumentType	node-syslog.h	/^typedef v8::FunctionCallbackInfo<v8::Value> ArgumentType;$/;"	t
BUILDTYPE	build/Makefile	/^BUILDTYPE ?= Release$/;"	m
CC.host	build/Makefile	/^CC.host ?= gcc$/;"	m
CC.target	build/Makefile	/^CC.target ?= $(CC)$/;"	m
CFLAGS.host	build/Makefile	/^CFLAGS.host ?=$/;"	m
CFLAGS.target	build/Makefile	/^CFLAGS.target ?= $(CFLAGS)$/;"	m
CFLAGS_CC_Debug	build/syslog.target.mk	/^CFLAGS_CC_Debug := \\$/;"	m
CFLAGS_CC_Release	build/syslog.target.mk	/^CFLAGS_CC_Release := \\$/;"	m
CFLAGS_C_Debug	build/syslog.target.mk	/^CFLAGS_C_Debug :=$/;"	m
CFLAGS_C_Release	build/syslog.target.mk	/^CFLAGS_C_Release :=$/;"	m
CFLAGS_Debug	build/syslog.target.mk	/^CFLAGS_Debug := \\$/;"	m
CFLAGS_Release	build/syslog.target.mk	/^CFLAGS_Release := \\$/;"	m
CXX.host	build/Makefile	/^CXX.host ?= g++$/;"	m
CXX.target	build/Makefile	/^CXX.target ?= $(CXX)$/;"	m
CXXFLAGS.host	build/Makefile	/^CXXFLAGS.host ?=$/;"	m
CXXFLAGS.target	build/Makefile	/^CXXFLAGS.target ?= $(CXXFLAGS)$/;"	m
DEFS_Debug	build/syslog.target.mk	/^DEFS_Debug := \\$/;"	m
DEFS_Release	build/syslog.target.mk	/^DEFS_Release := \\$/;"	m
DEPFLAGS	build/Makefile	/^DEPFLAGS = -MMD -MF $(depfile).raw$/;"	m
FunctionCallback	node-syslog.h	/^typedef v8::FunctionCallback FunctionCallback;$/;"	t
FunctionCallback	node-syslog.h	/^typedef v8::InvocationCallback FunctionCallback;$/;"	t
GYP_CFLAGS	build/syslog.target.mk	/^$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))$/;"	m
GYP_CXXFLAGS	build/syslog.target.mk	/^$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))$/;"	m
GYP_LDFLAGS	build/syslog.target.mk	/^$(obj).target\/syslog.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))$/;"	m
INCS_Debug	build/syslog.target.mk	/^INCS_Debug := \\$/;"	m
INCS_Release	build/syslog.target.mk	/^INCS_Release := \\$/;"	m
Initialize	node-syslog.h	/^	static void Initialize ( v8::Handle<v8::Object> target);$/;"	p	class:node::Syslog
Initialize	syslog.cc	/^Syslog::Initialize ( Handle<Object> target)$/;"	f	class:Syslog
LDFLAGS.host	build/Makefile	/^LDFLAGS.host ?=$/;"	m
LDFLAGS.target	build/Makefile	/^LDFLAGS.target ?= $(LDFLAGS)$/;"	m
LDFLAGS_Debug	build/syslog.target.mk	/^LDFLAGS_Debug := \\$/;"	m
LDFLAGS_Release	build/syslog.target.mk	/^LDFLAGS_Release := \\$/;"	m
LIBS	build/syslog.target.mk	/^$(obj).target\/syslog.node: LIBS := $(LIBS)$/;"	m
LIBS	build/syslog.target.mk	/^LIBS :=$/;"	m
LINK	build/Makefile	/^LINK ?= flock $(builddir)\/linker.lock $(CXX.target)$/;"	m
LINK.host	build/Makefile	/^LINK.host ?= $(CXX.host)$/;"	m
LINK.target	build/Makefile	/^LINK.target ?= $(LINK)$/;"	m
MAKEFLAGS	build/Makefile	/^MAKEFLAGS=-r$/;"	m
Makefile	Makefile	1;"	F
Makefile	build/Makefile	1;"	F
OBJS	build/syslog.target.mk	/^OBJS := \\$/;"	m
ReturnType	node-syslog.h	/^typedef v8::Handle<v8::Value> ReturnType;$/;"	t
ReturnType	node-syslog.h	/^typedef void ReturnType;$/;"	t
Syslog	node-syslog.h	/^	Syslog () : ObjectWrap() {$/;"	f	class:node::Syslog
Syslog	node-syslog.h	/^class Syslog : ObjectWrap {$/;"	c	namespace:node	inherits:ObjectWrap
Syslog	test.js	/^var Syslog = require('.\/node-syslog');$/;"	v
Syslog::Initialize	syslog.cc	/^Syslog::Initialize ( Handle<Object> target)$/;"	f	class:Syslog
Syslog::close	syslog.cc	/^Syslog::close ()$/;"	f	class:Syslog
Syslog::connected_	syslog.cc	/^bool Syslog::connected_ = false;$/;"	m	class:Syslog	file:
Syslog::destroy	syslog.cc	/^Syslog::destroy ( const Arguments& args)$/;"	f	class:Syslog
Syslog::init	syslog.cc	/^Syslog::init ( const Arguments& args)$/;"	f	class:Syslog
Syslog::log	syslog.cc	/^Syslog::log ( const Arguments& args)$/;"	f	class:Syslog
Syslog::name	syslog.cc	/^char Syslog::name[1024];$/;"	m	class:Syslog	file:
Syslog::open	syslog.cc	/^Syslog::open ( int option, int facility)$/;"	f	class:Syslog
Syslog::setMask	syslog.cc	/^Syslog::setMask ( const Arguments& args)$/;"	f	class:Syslog
TARGET	build/syslog.target.mk	/^TARGET := syslog$/;"	m
TOOLSET	build/Makefile	/^TOOLSET := target$/;"	m
TOOLSET	build/syslog.target.mk	/^$(OBJS): TOOLSET := $(TOOLSET)$/;"	m
TOOLSET	build/syslog.target.mk	/^$(builddir)\/syslog.node: TOOLSET := $(TOOLSET)$/;"	m
TOOLSET	build/syslog.target.mk	/^$(obj).target\/syslog.node: TOOLSET := $(TOOLSET)$/;"	m
TOOLSET	build/syslog.target.mk	/^TOOLSET := target$/;"	m
UV_AfterLog	syslog.cc	/^static void UV_AfterLog(uv_work_t *req) {$/;"	f	file:
UV_Log	syslog.cc	/^static void UV_Log(uv_work_t *req) {$/;"	f	file:
abs_builddir	build/Makefile	/^abs_builddir := $(abspath $(builddir))$/;"	m
abs_obj	build/Makefile	/^abs_obj := $(abspath $(obj))$/;"	m
abs_srcdir	build/Makefile	/^abs_srcdir := $(abspath $(srcdir))$/;"	m
all_deps	build/Makefile	/^all_deps :=$/;"	m
builddir	build/Makefile	/^builddir ?= $(builddir_name)\/$(BUILDTYPE)$/;"	m
builddir_name	build/Makefile	/^builddir_name ?= .$/;"	m
cb	syslog.cc	/^	Persistent<Function> cb;$/;"	m	struct:log_request	file:
close	node-syslog.h	/^	static void close();$/;"	p	class:node::Syslog
close	syslog.cc	/^Syslog::close ()$/;"	f	class:Syslog
cmd_alink	build/Makefile	/^cmd_alink = rm -f $@ && $(AR.$(TOOLSET)) crs $@ $(filter %.o,$^)$/;"	m
cmd_alink_thin	build/Makefile	/^cmd_alink_thin = rm -f $@ && $(AR.$(TOOLSET)) crsT $@ $(filter %.o,$^)$/;"	m
cmd_cc	build/Makefile	/^cmd_cc = $(CC.$(TOOLSET)) $(GYP_CFLAGS) $(DEPFLAGS) $(CFLAGS.$(TOOLSET)) -c -o $@ $<$/;"	m
cmd_copy	build/Makefile	/^cmd_copy = rm -rf "$@" && cp -af "$<" "$@"$/;"	m
cmd_cxx	build/Makefile	/^cmd_cxx = $(CXX.$(TOOLSET)) $(GYP_CXXFLAGS) $(DEPFLAGS) $(CXXFLAGS.$(TOOLSET)) -c -o $@ $<$/;"	m
cmd_link	build/Makefile	/^cmd_link = $(LINK.$(TOOLSET)) $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -o $@ -Wl,--start-group $(LD_INPUTS) -Wl,--end-group $(LIBS)$/;"	m
cmd_regen_makefile	build/Makefile	/^cmd_regen_makefile = cd $(srcdir); \/usr\/local\/stow\/node\/lib\/node_modules\/npm\/node_modules\/node-gyp\/gyp\/gyp_main.py -fmake --ignore-environment "--toplevel-dir=." -I\/home\/sam\/s\/node-syslog\/build\/config.gypi -I\/usr\/local\/stow\/node\/lib\/node_modules\/npm\/node_modules\/node-gyp\/addon.gypi -I\/home\/sam\/.node-gyp\/0.11.13\/common.gypi "--depth=." "-Goutput_dir=." "--generator-output=build" "-Dlibrary=shared_library" "-Dvisibility=default" "-Dnode_root_dir=\/home\/sam\/.node-gyp\/0.11.13" "-Dmodule_root_dir=\/home\/sam\/s\/node-syslog" binding.gyp$/;"	m
cmd_solink	build/Makefile	/^cmd_solink = $(LINK.$(TOOLSET)) -shared $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -Wl,-soname=$(@F) -o $@ -Wl,--whole-archive $(LD_INPUTS) -Wl,--no-whole-archive $(LIBS)$/;"	m
cmd_solink_module	build/Makefile	/^cmd_solink_module = $(LINK.$(TOOLSET)) -shared $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -Wl,-soname=$(@F) -o $@ -Wl,--start-group $(filter-out FORCE_DO_CMD, $^) -Wl,--end-group $(LIBS)$/;"	m
cmd_touch	build/Makefile	/^cmd_touch = touch $@$/;"	m
command_changed	build/Makefile	/^command_changed = $(or $(subst $(cmd_$(1)),,$(cmd_$(call replace_spaces,$@))),\\$/;"	m
connected_	node-syslog.h	/^	static bool connected_;$/;"	m	class:node::Syslog
connected_	syslog.cc	/^bool Syslog::connected_ = false;$/;"	m	class:Syslog	file:
constructor_template	node-syslog.h	/^	static v8::Persistent<v8::FunctionTemplate> constructor_template;$/;"	m	class:node::Syslog
d_files	build/Makefile	/^d_files := $(wildcard $(foreach f,$(all_deps),$(depsdir)\/$(f).d))$/;"	m
depfile	build/Makefile	/^depfile = $(depsdir)\/$(call replace_spaces,$@).d$/;"	m
depsdir	build/Makefile	/^depsdir := $(builddir)\/.deps$/;"	m
destroy	node-syslog.h	/^	static v8::Handle<v8::Value> destroy (const ArgumentType& args);$/;"	p	class:node::Syslog
destroy	syslog.cc	/^Syslog::destroy ( const Arguments& args)$/;"	f	class:Syslog
dirx	build/Makefile	/^dirx = $(call unreplace_spaces,$(dir $(call replace_spaces,$1)))$/;"	m
do_cmd	build/Makefile	/^define do_cmd$/;"	m
do_postbuilds	build/Makefile	/^define do_postbuilds$/;"	m
empty	build/Makefile	/^empty :=$/;"	m
escape_quotes	build/Makefile	/^escape_quotes = $(subst ','\\'',$(1))$/;"	m
escape_vars	build/Makefile	/^escape_vars = $(subst $$,$$$$,$(1))$/;"	m
exact_echo	build/Makefile	/^exact_echo = printf '%s\\n' '$(call escape_quotes,$(1))'$/;"	m
fixup_dep	build/Makefile	/^define fixup_dep$/;"	m
init	node-syslog.h	/^	static v8::Handle<v8::Value> init   (const ArgumentType& args);$/;"	p	class:node::Syslog
init	syslog.cc	/^Syslog::init ( const Arguments& args)$/;"	f	class:Syslog
log	node-syslog.h	/^	static v8::Handle<v8::Value> log (const ArgumentType& args);$/;"	p	class:node::Syslog
log	syslog.cc	/^Syslog::log ( const Arguments& args)$/;"	f	class:Syslog
log_level	syslog.cc	/^	uint32_t log_level;$/;"	m	struct:log_request	file:
log_request	syslog.cc	/^struct log_request {$/;"	s	file:
log_request::cb	syslog.cc	/^	Persistent<Function> cb;$/;"	m	struct:log_request	file:
log_request::log_level	syslog.cc	/^	uint32_t log_level;$/;"	m	struct:log_request	file:
log_request::msg	syslog.cc	/^	char *msg;$/;"	m	struct:log_request	file:
module.exports.init	node-syslog.js	/^module.exports = {$/;"	p
msg	syslog.cc	/^	char *msg;$/;"	m	struct:log_request	file:
name	node-syslog.h	/^	static char name[1024];$/;"	m	class:node::Syslog
name	syslog.cc	/^char Syslog::name[1024];$/;"	m	class:Syslog	file:
node	node-syslog.h	/^namespace node {$/;"	n
node-syslog.h	node-syslog.h	1;"	F
node-syslog.js	node-syslog.js	1;"	F
node::Syslog	node-syslog.h	/^class Syslog : ObjectWrap {$/;"	c	namespace:node	inherits:ObjectWrap
node::Syslog::Initialize	node-syslog.h	/^	static void Initialize ( v8::Handle<v8::Object> target);$/;"	p	class:node::Syslog
node::Syslog::Syslog	node-syslog.h	/^	Syslog () : ObjectWrap() {$/;"	f	class:node::Syslog
node::Syslog::close	node-syslog.h	/^	static void close();$/;"	p	class:node::Syslog
node::Syslog::connected_	node-syslog.h	/^	static bool connected_;$/;"	m	class:node::Syslog
node::Syslog::constructor_template	node-syslog.h	/^	static v8::Persistent<v8::FunctionTemplate> constructor_template;$/;"	m	class:node::Syslog
node::Syslog::destroy	node-syslog.h	/^	static v8::Handle<v8::Value> destroy (const ArgumentType& args);$/;"	p	class:node::Syslog
node::Syslog::init	node-syslog.h	/^	static v8::Handle<v8::Value> init   (const ArgumentType& args);$/;"	p	class:node::Syslog
node::Syslog::log	node-syslog.h	/^	static v8::Handle<v8::Value> log (const ArgumentType& args);$/;"	p	class:node::Syslog
node::Syslog::name	node-syslog.h	/^	static char name[1024];$/;"	m	class:node::Syslog
node::Syslog::open	node-syslog.h	/^	static void open(int, int);$/;"	p	class:node::Syslog
node::Syslog::setMask	node-syslog.h	/^	static v8::Handle<v8::Value> setMask (const ArgumentType& args);$/;"	p	class:node::Syslog
node::Syslog::~Syslog	node-syslog.h	/^	~Syslog (){};$/;"	f	class:node::Syslog
obj	build/Makefile	/^obj := $(builddir)\/obj$/;"	m
open	node-syslog.h	/^	static void open(int, int);$/;"	p	class:node::Syslog
open	syslog.cc	/^Syslog::open ( int option, int facility)$/;"	f	class:Syslog
prereq_changed	build/Makefile	/^prereq_changed = $(filter-out FORCE_DO_CMD,$(filter-out $|,$?))$/;"	m
quiet	build/Makefile	/^  quiet=$/;"	m
quiet	build/Makefile	/^  quiet=quiet_$/;"	m
quiet_cmd_alink	build/Makefile	/^quiet_cmd_alink = AR($(TOOLSET)) $@$/;"	m
quiet_cmd_alink_thin	build/Makefile	/^quiet_cmd_alink_thin = AR($(TOOLSET)) $@$/;"	m
quiet_cmd_cc	build/Makefile	/^quiet_cmd_cc = CC($(TOOLSET)) $@$/;"	m
quiet_cmd_copy	build/Makefile	/^quiet_cmd_copy = COPY $@$/;"	m
quiet_cmd_cxx	build/Makefile	/^quiet_cmd_cxx = CXX($(TOOLSET)) $@$/;"	m
quiet_cmd_link	build/Makefile	/^quiet_cmd_link = LINK($(TOOLSET)) $@$/;"	m
quiet_cmd_regen_makefile	build/Makefile	/^quiet_cmd_regen_makefile = ACTION Regenerating $@$/;"	m
quiet_cmd_solink	build/Makefile	/^quiet_cmd_solink = SOLINK($(TOOLSET)) $@$/;"	m
quiet_cmd_solink_module	build/Makefile	/^quiet_cmd_solink_module = SOLINK_MODULE($(TOOLSET)) $@$/;"	m
quiet_cmd_touch	build/Makefile	/^quiet_cmd_touch = TOUCH $@$/;"	m
replace_spaces	build/Makefile	/^replace_spaces = $(subst $(space),?,$1)$/;"	m
setMask	node-syslog.h	/^	static v8::Handle<v8::Value> setMask (const ArgumentType& args);$/;"	p	class:node::Syslog
setMask	syslog.cc	/^Syslog::setMask ( const Arguments& args)$/;"	f	class:Syslog
space	build/Makefile	/^space := $(empty) $(empty)$/;"	m
srcdir	build/Makefile	/^srcdir := ..$/;"	m
syslog.cc	syslog.cc	1;"	F
syslog.target.mk	build/syslog.target.mk	1;"	F
syslog_h	node-syslog.h	2;"	d
test.js	test.js	1;"	F
unreplace_spaces	build/Makefile	/^unreplace_spaces = $(subst ?,$(space),$1)$/;"	m
~Syslog	node-syslog.h	/^	~Syslog (){};$/;"	f	class:node::Syslog
